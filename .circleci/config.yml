version: 2
jobs:
  build:
    machine:
     image: circleci/classic:edge
     environment:
       RAILS_ENV: test
       DB_HOST: 127.0.0.1
       DB_USERNAME: 'root'
       DB_PASSWORD: 'password'

    steps:
      - checkout
      # - setup_remote_docker
      - run:
          name: Docker Compose をインストール
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose

      - run:
          name: docker-compose build
          command: docker-compose build

      - run:
          name: docker-compose up
          command: docker-compose up -d

      - run:
          name: sleep for waiting launch db
          command: sleep 1

      - run:
          name: "create db"
          command: docker-compose run web rails db:create RAILS_ENV=test

      - run:
          name: "migrate db"
          command: docker-compose run web rails db:migrate RAILS_ENV=test
      # run test
      # - run:
      #     name: Run rspec
      #     command: |
      #       docker-compose run web mkdir /tmp/test-results
      #       TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
      #         circleci tests split --split-by=timings)"
      #
      #       docker-compose run web bundle exec rspec \
      #         --format progress \
      #         --out /tmp/test-results/rspec.xml \
      #         --format progress \
      #         $TEST_FILES
      # collect reports
      # - store_test_results:
      #     path: /tmp/test-results
      # - store_artifacts:
      #     path: /tmp/test-results
      #     destination: test-results
      - run:
          name: docker-compose down
          command: docker-compose down

  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      # see: https://devcenter.heroku.com/articles/container-registry-and-runtime#using-a-ci-cd-platform
      - run:
          name: "build docker image"
          command: docker build --rm=false -t registry.heroku.com/${HEROKU_APP_NAME}/web .
      - run:
          name: setup heroku command
          command: bash .circleci/setup_heroku.sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          # HEROKU_AUTH_TOKEN is generated by `heroku auth:token`
          name: "push container to registry.heroku.com"
          command: |
            docker login --username=_ --password=$HEROKU_AUTH_TOKEN registry.heroku.com
            docker push registry.heroku.com/${HEROKU_APP_NAME}/web
      - run:
          name: heroku db migrate
          command: heroku run rails db:migrate --app ${HEROKU_APP_NAME}
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
